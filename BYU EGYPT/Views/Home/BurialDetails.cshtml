@{
    ViewData["Title"] = "Burial - " + Model.BurialNumber;
    @model BYU_EGYPT.Models.Burial

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/FagElGamous.styles.css" asp-append-version="true" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>


    <style>
        .minimalistic-btn {
            background-color: transparent; /* No background color */
            border: 1px solid #007bff; /* Border color similar to Bootstrap primary color */
            color: #007bff; /* Text color similar to Bootstrap primary color */
            text-align: center;
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            border-radius: 0.25rem;
            transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
        }

            .minimalistic-btn:hover {
                color: #fff; /* White text on hover */
                background-color: #007bff; /* Bootstrap primary color background on hover */
                border-color: #0056b3; /* Slightly darker border color on hover */
                text-decoration: none; /* Remove underline from links */
            }

        .pdf-placeholder-container {
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            gap: 20px; /* Adjust the space between items */
        }

        .pdf-placeholder {
            border: 1px solid #ccc;
            padding: 10px;
            width: 150px; /* Set a fixed width for each placeholder */
            text-align: center;
        }

            .pdf-placeholder img {
                width: 100%;
                height: auto;
            }

        .active-tab {
            background-color: #0072CE; /* Set your preferred highlight color */
            color: #fff; /* Set the text color for the active tab */
        }

      
    </style>

</head>

<body>
    <br />

    <h1>Burial @Model.Location #@Model.BurialNumber</h1>

    <div class="container mt-3">

        <div class="btn-group mt-4" role="group" aria-label="Related Information">
            <a href="javascript:void(0);" onclick="location.reload();" class="btn minimalistic-btn active-tab">Burial Details</a>
            <a href="@Url.Action("RelatedOsteology", "Home", new { sampleNum = Model.BurialNumber })" class="btn minimalistic-btn">Osteology Analysis</a>
            <a href="@Url.Action("RelatedCrania", "Home", new { sampleNum = Model.BurialNumber })" class="btn minimalistic-btn">Crania Analysis</a>
            <a href="@Url.Action("RelatedC14", "Home", new { sampleNum = Model.BurialNumber })" class="btn minimalistic-btn">Carbon Dating Info</a>
            @*need to change burial number to biological sample id? ^^^*@
            <a href="@Url.Action("RelatedTextiles", "Home", new { sampleNum = Model.BurialNumber })" class="btn minimalistic-btn">Related Textiles</a>
            <a href="@Url.Action("RelatedArtifacts", "Home", new { sampleNum = Model.BurialNumber })" class="btn minimalistic-btn">Related Artifacts</a>
        </div>

        <hr />

        <dl class="row">
            <dt class="col-sm-3">Location</dt>
            <dd class="col-sm-6">@Model.Location</dd>
            <dd class="col-sm-3"><a asp-controller="Home" asp-action="EditRecord">Edit</a></dd>

            <dt class="col-sm-3">Excavation Year</dt>
            <dd class="col-sm-9">@Model.ExcavationYear</dd>

            <dt class="col-sm-3">Burial Number</dt>
            <dd class="col-sm-9">@Model.BurialNumber</dd>

            <dt class="col-sm-3">Head Direction</dt>
            <dd class="col-sm-9">@Model.HeadDirection</dd>



        </dl>
        <br />
        <br />






        @foreach (var photo in Model.BurialPhotos)
            @if (Model.BurialPhotos.Any())
            {
                <div class="image-placeholder text-center position-relative" style="width:900px; height:600px; margin: auto;">

                    <img class="blurryPhoto img-fluid" onclick="toggleBlur('@photo.BurialPhotoFilePath@photo.BurialPhotoFileName', this)" src="@($"https://egyptbucket.s3.us-east-2.amazonaws.com/{photo.BurialPhotoFilePath}{photo.BurialPhotoFileName}")" style="max-width: 100%; max-height: 100%; filter: blur(30px);" alt="Burial Image">

                    <button class="viewButton btn position-absolute" onclick="viewImage('@photo.BurialPhotoFilePath@photo.BurialPhotoFileName', this)" style="top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 3; background-color: white; color: black; font-size: 20px; padding: 10px 20px;">View</button>

                    <button class="zoomIn btn position-absolute" style="top: 10%; right: 10%; z-index: 1000; font-size: 24px; color: white; background-color: black; border-radius: 50%; width: 40px; height: 40px; display: flex; justify-content: center; align-items: center;">+</button>

                    <button class="zoomOut btn position-absolute" style="top: 20%; right: 10%; z-index: 1000; font-size: 24px; color: white; background-color: black; border-radius: 50%; width: 40px; height: 40px; display: flex; justify-content: center; align-items: center;">-</button>


                    @if (Model.BurialPhotos.Count > 1)
                    {
                        <button class="btn position-absolute" style="top: 50%; left: 10px; transform: translateY(-50%); z-index: 2;" onclick="changePhoto(-1)">&#10094;</button>
                        <button class="btn position-absolute" style="top: 50%; right: 10px; transform: translateY(-50%); z-index: 2;" onclick="changePhoto(1)">&#10095;</button>
                    }
                </div>
                <input type="hidden" id="currentPhotoIndex" value="0">
            }







            <form method="post" asp-action="EditRecord" asp-controller="Home">
                <input type="hidden" />
                <div class="form-group">
                    <label asp-for="Location" class="col-sm-3 col-form-label">Location</label>
                    <div class="col-sm-9">
                        <input asp-for="Location" class="form-control" />
                    </div>
                    <label asp-for="ExcavationYear" class="col-sm-3 col-form-label">Excavation Year</label>
                    <div class="col-sm-9">
                        <input asp-for="ExcavationYear" class="form-control" />
                    </div>
                    <label asp-for="BurialNumber" class="col-sm-3 col-form-label">Burial Number</label>
                    <div class="col-sm-9">
                        <input asp-for="BurialNumber" class="form-control" />
                    </div>
                    <label asp-for="HeadDirection" class="col-sm-3 col-form-label">Head Direction</label>
                    <div class="col-sm-9">
                        <input asp-for="HeadDirection" class="form-control" />
                    </div>
                </div>
                <!-- Add similar fields for other properties -->
                <br />
                <br />


                <button type="submit" class="btn btn-primary">Save Changes</button>
                <a href="@Url.Action(" BurialTable", "Home" )" class="btn btn-secondary">Back to List</a>
            </form>
        </div>

        <br />
        <br />
        <br />

        <div class="container mt-3">
            <div id="accordion">
                <div class="card">
                    <div class="card-header">
                        <a class="card-link" data-toggle="collapse" href="#collapseBodyAnalysis">
                            Body Analysis
                        </a>
                    </div>
                    <div id="collapseBodyAnalysis" class="collapse" data-parent="#accordion">
                        <div class="card-body">
                            <!-- Placeholder for Body Analysis picture -->
                            <img src="path_to_your_placeholder_image" alt="Body Analysis Placeholder" />
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <a class="card-link" data-toggle="collapse" href="#collapseCrania">
                            Crania
                        </a>
                    </div>
                    <div id="collapseCrania" class="collapse" data-parent="#accordion">
                        <div class="card-body">
                            <!-- Placeholder for Crania picture -->
                            <img src="path_to_your_placeholder_image" alt="Crania Placeholder" />
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <a class="card-link" data-toggle="collapse" href="#collapseFieldbooks">
                            Fieldbooks
                        </a>
                    </div>
                    <div id="collapseFieldbooks" class="collapse" data-parent="#accordion">
                        <!-- These links will open the PDF in a new tab at the specified page -->








                        <a class="card-link" href="https://egyptbucket.s3.us-east-2.amazonaws.com/Fieldbooks/1992/1992A_BYU_EGYPT_FIELD_BOOK.pdf#page=5" target="_blank">Page 5</a>
                        <a class="card-link" href="https://egyptbucket.s3.us-east-2.amazonaws.com/Fieldbooks/1992/1992A_BYU_EGYPT_FIELD_BOOK.pdf#page=18" target="_blank">Page 30 & 31</a>
                        <a class="card-link" href="https://egyptbucket.s3.us-east-2.amazonaws.com/Fieldbooks/1992/1992A_BYU_EGYPT_FIELD_BOOK.pdf#page=19" target="_blank">Page 19</a>
                        <embed src="https://egyptbucket.s3.us-east-2.amazonaws.com/Fieldbooks/1992/1992A_BYU_EGYPT_FIELD_BOOK.pdf" type="application/pdf" width="100%" height="600px">


                    </div>

                </div>



            </div>
        </div>

        @section Scripts {

            <script>.d - none {
                        display: none;
                    }</script>


            <script>function changePhoto(direction) {
                    let currentIndex = parseInt(document.getElementById('currentPhotoIndex').value);
                    currentIndex += direction;

                    if (currentIndex < 0) {
                        currentIndex = photos.length - 1;
                    } else if (currentIndex >= photos.length) {
                        currentIndex = 0;
                    }

                    var allImages = document.querySelectorAll('.image-placeholder');
                    allImages.forEach((elem, index) => {
                        if (index === currentIndex) {
                            elem.classList.remove('d-none');
                            elem.querySelector('.blurryPhoto').style.filter = 'blur(30px)';
                            elem.querySelector('.viewButton').style.display = 'block';
                        } else {
                            elem.classList.add('d-none');
                        }
                    });

                    document.getElementById('currentPhotoIndex').value = currentIndex.toString();
                }</script>



            <!-- Ensure jQuery is loaded first for Bootstrap 4 -->
            <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
            <!-- Then load Bootstrap's JavaScript -->
            <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

            <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
            <script>$(document).ready(function () {
                    // Get the current page URL
                    var currentPage = window.location.href;

                    // Find the tab that matches the current URL
                    var activeTab = $('.btn[data-tab]').filter(function () {
                        return currentPage.indexOf($(this).attr('href')) > -1;
                    });

                    // Remove the active class from all tabs
                    $('.btn[data-tab]').removeClass('active-tab');

                    // Add the active class to the matched tab
                    activeTab.addClass('active-tab');
                });</script>

            <script>document.addEventListener('DOMContentLoaded', function () {
                    document.querySelectorAll('.viewButton').forEach(function (button) {
                        button.addEventListener('click', function () {
                            var image = this.previousElementSibling; // Assuming the image is right before the button
                            image.style.filter = 'none'; // Remove the blur effect
                            this.style.display = 'none'; // Optionally hide the view button after clicking
                        });
                    });
                });</script>



            <script>document.addEventListener('DOMContentLoaded', function () {
                    // Function to change photo
                    window.changePhoto = function (direction) {
                        var currentIndex = parseInt(document.getElementById('currentPhotoIndex').value);
                        var placeholders = document.querySelectorAll('.image-placeholder');
                        var newIndex = currentIndex + direction;

                        if (newIndex < 0) newIndex = placeholders.length - 1;
                        if (newIndex >= placeholders.length) newIndex = 0;

                        placeholders[currentIndex].classList.add('d-none'); // Hide current
                        placeholders[newIndex].classList.remove('d-none'); // Show new
                        placeholders[newIndex].querySelector('img').style.filter = 'blur(30px)'; // Reset blur on new image
                        document.getElementById('currentPhotoIndex').value = newIndex; // Update index
                    };

                    // Function to make the photo clear
                    document.querySelectorAll('.viewButton').forEach(function (button) {
                        button.addEventListener('click', function () {
                            this.previousElementSibling.style.filter = 'none'; // Remove blur
                            this.style.display = 'none'; // Hide button
                        });
                    });
                });</script>



            <script>document.addEventListener('DOMContentLoaded', function () {
                    // Adjust the zoom level of the image
                    function updateZoom(img, zoomIn) {
                        let currentScale = parseFloat(img.getAttribute('data-scale')) || 1;
                        let newScale = currentScale * (zoomIn ? 1.1 : 0.9); // Zoom in or out
                        img.style.transform = `scale(${newScale})`;
                        img.setAttribute('data-scale', newScale.toString());
                    }

                    // Attach event listeners to the zoom buttons
                    document.querySelectorAll('.zoomIn, .zoomOut').forEach(button => {
                        button.addEventListener('click', function (event) {
                            const img = this.parentNode.querySelector('.blurryPhoto'); // Assuming the image to zoom is in the same container
                            const zoomIn = this.classList.contains('zoomIn'); // Check if the button is for zooming in
                            updateZoom(img, zoomIn);
                        });
                    });
                });</script>



            <script>document.addEventListener('DOMContentLoaded', function () {
                    // Toggle blur and "View" button visibility upon image click
                    document.querySelectorAll('.blurryPhoto').forEach(function (img) {
                        img.addEventListener('click', function () {
                            // Determine if the image is currently blurred
                            var isBlurred = img.style.filter === '' || img.style.filter === 'none';
                            // Increase blur to 30px
                            img.style.filter = isBlurred ? 'blur(30px)' : 'none';

                            // Find the "View" button related to this image and toggle its visibility
                            var viewButton = img.nextElementSibling;
                            if (viewButton && viewButton.classList.contains('viewButton')) {
                                viewButton.style.display = isBlurred ? 'block' : 'none';
                            }
                        });
                    });

                    // Attach event listeners to "View" buttons
                    document.querySelectorAll('.viewButton').forEach(function (button) {
                        button.addEventListener('click', function () {
                            var image = this.previousElementSibling; // Get the related image
                            image.style.filter = 'none'; // Clear the blur effect
                            this.style.display = 'none'; // Hide the "View" button
                        });
                    });
                });</script>











        }

    </body>
</html>